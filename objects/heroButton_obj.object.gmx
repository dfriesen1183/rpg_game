<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>button_obj</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    id.sprite_index = heroButton_spr;
    id.scale_x = 1;
    id.scale_y = 1;
    
    event_inherited();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    if (id.active) {
        id.active = false;
        id.image_index = global.btnStateUp;
        
        var hero = ds_list_find_value(global.heroes, id.index);
        var partyIndex = ds_map_find_value(hero, "partyIndex");
        ds_list_delete(global.party, partyIndex);
        //updating recorded positions
        var size = ds_list_size(global.party);
        for (var i=0; i&lt;size; i++) {
            hero = ds_list_find_value(global.party, i);
            if (is_undefined(ds_map_find_value(hero, "partyIndex"))) {
                ds_map_add(hero, "partyIndex", i);
            } else {
                ds_map_replace(hero, "partyIndex", i);
            }
        }
        
        with (mainMenuBegin_obj) {
            id.image_index = global.btnStateDisabled;
        }
    } else {
        var newMember = ds_list_find_value(global.heroes, id.index);
        var result = addHero_scr(newMember, false);
        id.active = true;
        id.image_index = global.btnStateActive;
        if (result &amp;&amp; global.record[? "duration"] != 0) {
            with (mainMenuBegin_obj) {
                id.image_index = global.btnStateUp;
            }
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
